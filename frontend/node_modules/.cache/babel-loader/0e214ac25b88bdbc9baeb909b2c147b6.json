{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\amand\\\\Desktop\\\\SLIIT\\\\4th Year\\\\IoT\\\\IOT-Dashboard\\\\frontend\\\\src\\\\components\\\\NavigationBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './NavigationBar.scss';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavigationBar = () => {\n  _s();\n  const [currentTime, setCurrentTime] = useState('');\n  const [currentDate, setCurrentDate] = useState('');\n  const [currentDay, setCurrentDay] = useState('');\n  useEffect(() => {\n    const updateDateTime = () => {\n      const now = new Date();\n\n      // Format time in HH:MM:SS\n      const time = now.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit'\n      });\n      setCurrentTime(time);\n\n      // Format date in MM/DD/YYYY\n      const date = now.toLocaleDateString([], {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      });\n      setCurrentDate(date);\n\n      // Get the weekday (e.g., \"Monday\")\n      const day = now.toLocaleDateString([], {\n        weekday: 'long'\n      });\n      setCurrentDay(day);\n    };\n\n    // Update every second\n    const intervalId = setInterval(updateDateTime, 1000);\n\n    // Cleanup interval on unmount\n    return () => clearInterval(intervalId);\n  }, []);\n  const userName = \"John Doe\"; // Replace with actual user's name\n  const userPosition = \"Patient\"; // Replace with actual user position\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: [/*#__PURE__*/_jsxDEV(AccountCircleIcon, {\n        style: {\n          fontSize: 40,\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: userPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-time\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"time\",\n        children: currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"date\",\n        children: currentDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"day\",\n        children: currentDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"signout-button\",\n      children: \"Sign Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(NavigationBar, \"pFW6XSIrmTEcvkeqlCCvTdkFYtE=\");\n_c = NavigationBar;\nexport default NavigationBar;\nvar _c;\n$RefreshReg$(_c, \"NavigationBar\");","map":{"version":3,"names":["React","useEffect","useState","AccountCircleIcon","jsxDEV","_jsxDEV","NavigationBar","_s","currentTime","setCurrentTime","currentDate","setCurrentDate","currentDay","setCurrentDay","updateDateTime","now","Date","time","toLocaleTimeString","hour","minute","second","date","toLocaleDateString","year","month","day","weekday","intervalId","setInterval","clearInterval","userName","userPosition","className","children","style","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/amand/Desktop/SLIIT/4th Year/IoT/IOT-Dashboard/frontend/src/components/NavigationBar.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './NavigationBar.scss';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\n\r\nconst NavigationBar = () => {\r\n  const [currentTime, setCurrentTime] = useState('');\r\n  const [currentDate, setCurrentDate] = useState('');\r\n  const [currentDay, setCurrentDay] = useState('');\r\n\r\n  useEffect(() => {\r\n    const updateDateTime = () => {\r\n      const now = new Date();\r\n\r\n      // Format time in HH:MM:SS\r\n      const time = now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit', second: '2-digit' });\r\n      setCurrentTime(time);\r\n\r\n      // Format date in MM/DD/YYYY\r\n      const date = now.toLocaleDateString([], { year: 'numeric', month: 'long', day: 'numeric' });\r\n      setCurrentDate(date);\r\n\r\n      // Get the weekday (e.g., \"Monday\")\r\n      const day = now.toLocaleDateString([], { weekday: 'long' });\r\n      setCurrentDay(day);\r\n    };\r\n\r\n    // Update every second\r\n    const intervalId = setInterval(updateDateTime, 1000);\r\n\r\n    // Cleanup interval on unmount\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  const userName = \"John Doe\"; // Replace with actual user's name\r\n  const userPosition = \"Patient\"; // Replace with actual user position\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"user-info\">\r\n        <AccountCircleIcon style={{ fontSize: 40, color: \"white\" }} />\r\n        <div>\r\n          <h4>{userName}</h4>\r\n          <p>{userPosition}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"current-time\">\r\n        <h2 className=\"time\">{currentTime}</h2>\r\n        <p className=\"date\">{currentDate}</p>\r\n        <p className=\"day\">{currentDay}</p>\r\n      </div>\r\n      <button className=\"signout-button\">Sign Out</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}